Settings[Keys.Host] = "cake-contrib.github.io/Cake.Issues";
Settings[DocsKeys.Title] = "Cake Issues";
Settings[DocsKeys.BaseEditUrl] = "https://github.com/cake-contrib/Cake.Issues.Website/blob/develop/input/";
Settings[DocsKeys.IncludeGlobalNamespace] = false;

Pipelines.InsertBefore(Docs.Code, "Addins",
    ReadFiles("../addins/*.yml"),
    OrderBy(@doc.String(Keys.SourceFileName)),
    Yaml()
);

// Remove any symbols generated by Fody.Costura
Pipelines[Docs.Api].Add(Where(!@doc.String(CodeAnalysisKeys.QualifiedName).StartsWith("Costura")));

Pipelines.InsertAfter("Addins", "AddinCategories",
    GroupByMany(@doc.List<string>("Categories"),
        Documents("Addins")
    ),
    Meta(Keys.WritePath, new FilePath("addins/" + @doc.String(Keys.GroupKey).ToLower().Replace(" ", "-") + "/index.html")),
    Meta(Keys.RelativeFilePath, @doc.FilePath(Keys.WritePath)),
    OrderBy(@doc.String(Keys.GroupKey))
);

Pipelines.InsertAfter(Docs.Api, "DslAliases",
    GroupByMany(
        @doc.DocumentList(CodeAnalysisKeys.Attributes)
            .Where(attr => attr.String(CodeAnalysisKeys.Name) == "CakeAliasCategoryAttribute")
            .Select(attr => attr.Get<Microsoft.CodeAnalysis.AttributeData>(CodeAnalysisKeys.AttributeData).ConstructorArguments.FirstOrDefault().Value),
        Documents(Docs.Api),
        Where(
            @doc.String(CodeAnalysisKeys.Kind) == "NamedType" && 
            @doc.DocumentList(CodeAnalysisKeys.Attributes)
                .Any(attr => attr.String(CodeAnalysisKeys.Name) == "CakeAliasCategoryAttribute")
        )
    ),
    Meta(Keys.WritePath, new FilePath("dsl/index.html")),
    Meta(Keys.RelativeFilePath, @doc.FilePath(Keys.WritePath)),
    OrderBy(@doc.String(Keys.GroupKey))
);

Pipelines.Add("RenderAddins",
    Documents("AddinCategories"),
    Razor()
        .WithLayout("/_AddinsLayout.cshtml"),
    WriteFiles()
);
